{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"用户注册\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"注册\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    class: \"toggle-button\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit('toggle'))\n  }, \"登录\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","register","_hoisted_2","for","type","id","$event","$data","username","required","_hoisted_3","password","onClick","_ctx","$emit"],"sources":["C:\\Users\\SOFT FISH\\Desktop\\智慧树代码\\123\\123\\src\\views\\UserRegister.vue"],"sourcesContent":["<!-- UserRegister.vue -->\r\n<template>\r\n    <div class=\"form-container\">\r\n        <h2>用户注册</h2>\r\n        <form @submit.prevent=\"register\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">密码:</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n            </div>\r\n            <button type=\"submit\">注册</button>\r\n        </form>\r\n        <button class=\"toggle-button\" @click=\"$emit('toggle')\">登录</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { register } from '@/api/user';\r\n\r\nexport default {\r\n    name: 'UserRegister',\r\n    data() {\r\n        return {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    },\r\n    methods: {\r\n        async register() {\r\n            try {\r\n                // 构建请求数据\r\n\r\n                // 发送 POST 请求到后端\r\n                const response = await register(this.username, this.password);\r\n                if (response && response.data) {\r\n                    console.log('注册成功:', response.data);\r\n                    // 这里可以根据后端返回的信息执行其他操作，例如跳转到登录页面\r\n                } else {\r\n                    console.error('注册响应数据为空');\r\n                }\r\n            } catch (error) {\r\n                console.error('注册失败:', error.response ? error.response.data : error.message);\r\n                // 显示错误信息给用户\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    width: 300px;\r\n    text-align: center;\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 15px;\r\n    text-align: left;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"password\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #28a745;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #218838;\r\n}\r\n\r\nbutton.toggle-button {\r\n    background-color: #007bff;\r\n}\r\n\r\nbutton.toggle-button:hover {\r\n    background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;EAESA,KAAK,EAAC;AAAgB;;EAGdA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;uBAP/BC,mBAAA,CAcM,OAdNC,UAcM,G,0BAbFC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAUO;IAVAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJrBC,cAAA,KAAAC,IAAA,KAI+BC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;MAC3BJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFFP,mBAAA,CAAkC;IAA3BQ,GAAG,EAAC;EAAU,GAAC,MAAI,sB,gBAC1BR,mBAAA,CAA6D;IAAtDS,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;IAPhD,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAO0DC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAC,QAAQ,E,KAEtDb,mBAAA,CAGM,OAHNe,UAGM,G,0BAFFf,mBAAA,CAAiC;IAA1BQ,GAAG,EAAC;EAAU,GAAC,KAAG,sB,gBACzBR,mBAAA,CAAiE;IAA1DS,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAXpD,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAW8DC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAI,QAAQ,E,+BAE1DhB,mBAAA,CAAiC;IAAzBS,IAAI,EAAC;EAAQ,GAAC,IAAE,qB,4BAE5BT,mBAAA,CAAkE;IAA1DH,KAAK,EAAC,eAAe;IAAEoB,OAAK,EAAAf,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAAEO,IAAA,CAAAC,KAAK;KAAY,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}